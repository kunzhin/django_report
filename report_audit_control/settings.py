"""
Django settings for report_audit_control project.

Generated by 'django-admin startproject' using Django 3.2.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
from .env_var import DEBUG_MODE, DATABASE_CONNECT, DJANGO_SECRET_KEY

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = DJANGO_SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = DEBUG_MODE

ALLOWED_HOSTS = [
    'promo-ap.ru',
    '192.168.1.46',
    '127.0.0.1'
    ]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #'debug_toolbar',
    'photostream.apps.PhotostreamConfig',
    'accounts.apps.AccountsConfig',
    'info.apps.InfoConfig',
    'remains.apps.RemainsConfig',
    'indicators.apps.IndicatorsConfig',
    'retail_census.apps.RetailCensusConfig',
    'doc_flow.apps.DocFlowConfig',
    'payroll.apps.PayrollConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #'debug_toolbar.middleware.DebugToolbarMiddleware',
]


ROOT_URLCONF = 'report_audit_control.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'report_audit_control/templates'), 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'report_audit_control.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases
# file_name = 'server_connect.txt'
# file_name_test_server = 'test_server_connect.txt'
#
# with open(file=os.path.join(BASE_DIR, file_name)) as file:
#     data = file.read().split(' ')
#
# key_for_dict_connect = ['server_name', 'name_db', 'user', 'password', 'host', 'port']
#
# data_conn = dict(zip(key_for_dict_connect, data))

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': DATABASE_CONNECT.get('NAME'),
        'USER': DATABASE_CONNECT.get('USER'),
        'PASSWORD': DATABASE_CONNECT.get('PASSWORD'),
        'HOST': DATABASE_CONNECT.get('HOST'),
        'PORT': DATABASE_CONNECT.get('PORT')
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'Asia/Novosibirsk'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'report_audit_control/static'),
    os.path.join(BASE_DIR, '/media/'),
]

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

LOGIN_REDIRECT_URL = '/information/'
LOGOUT_REDIRECT_URL = '/'

# Время жизни сессии 5мин (в секундах)
# SESSION_COOKIE_AGE = 5*60

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


INTERNAL_IPS = [
    '127.0.0.1',
    '192.168.1.46',
]
